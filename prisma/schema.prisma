

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider ="cockroachdb" // works for both CockroachDB and PostgreSQL
  url      = env("DATABASE_URL")
}

// ===============================
//  ENUMS
// ===============================

enum Role {
  USER
  ADMIN
}

// ===============================
//  USER TABLE
// ===============================

model User {
  id                String   @id @default(uuid())
  name              String?
  email             String?  @unique
  password          String?  // Hashed password for credential login
  image             String?
  role              Role     @default(USER)
  emailVerified     DateTime?
  verificationToken String?  // Token for email verification or password reset
  tokenExpires      DateTime? // Token expiration time
  isActive          Boolean  @default(true)

  accounts          Account[]
  sessions          Session[]

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// ===============================
//  ACCOUNT TABLE (For OAuth)
// ===============================

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// ===============================
//  SESSION TABLE
// ===============================

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// ===============================
//  VERIFICATION TOKEN TABLE
// ===============================

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
